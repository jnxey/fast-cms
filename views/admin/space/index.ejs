<%- include ('./style.ejs') -%>
<div id="page-space" class="page-space-wrap">
    <el-button type="primary" @click="addMenuOpen()">添加新菜单</el-button>
    <%- include ('./_widgets/menu-dialog/index.ejs') -%>
    <el-container>
        <el-aside width="200px">
            <%- include ('./_widgets/menu-list/index.ejs') -%>
        </el-aside>
        <el-main>
            <%- include ('./_widgets/current-page/index.ejs') -%>
        </el-main>
    </el-container>

</div>

<script>
  window.TempdataMenuList = <%- data.menus %>;
  window.TempdataMenuRoot = 0;
  window.TempdataMenuType = {menu: 1, page: 2};
  window.TempdataMenuForm = {
    menu_name: '',
    menu_mark: '',
    menu_type: window.TempdataMenuType.menu,
    parent_id: 0,
    content_id: 0,
    sort: 0
  };
  Vue.createApp({
    data() {
      return {
        visibleMenu: false,
        formMenu: Object.assign({}, window.TempdataMenuForm),
        menuList: window.TempdataMenuList,
        menuTree: [],
        menuProps: {children: 'children', label: 'menu_name'},
        menuType: window.TempdataMenuType,
        currentPage: null
      };
    },
    created() {
      console.log(this.menuList)
      this.initTree();
    },
    methods: {
      /// 初始化菜单树
      initTree: function() {
        this.menuTree = this.getMenuTree(this.menuList);
      },
      /// 添加菜单弹窗
      addMenuOpen: function (id) {
        var temp = Boolean(id) ? {parent_id: id} : {};
        this.formMenu = Object.assign({}, window.TempdataMenuForm, temp);
        this.visibleMenu = true;
      },
      /// 编辑菜单弹窗
      editMenuOpen(data) {
        this.formMenu = Object.assign({}, window.TempdataMenuForm, data);
        this.visibleMenu = true;
      },
      /// 添加菜单
      addMenuSubmit: function () {
        var ctx = this;
        var isValid = ctx.formMenu.menu_name && ctx.formMenu.menu_mark;
        if (isValid) {
          var url = '/api/admin-home/menu-add-or-edit';
          var params = Object.assign({}, this.formMenu);
          var tipsSuccess = params.id ? '编辑成功' : '添加成功';
          var tipsError = params.id ? '编辑失败' : '添加失败';
          var loading = ElementPlus.ElLoading.service({
            lock: true,
            text: '正在添加...',
            background: 'rgba(0,0,0,0.7)'
          });
          axios.post(url, params).then(function (response) {
            var result = response.data;
            if (result.code === window.RESPONSE_MAP.success.code) {
              ctx.visibleMenu = false;
              ElementPlus.ElMessage({message: tipsSuccess, type: 'success'});

              if(Boolean(params.id)) {
                var key = ctx.menuList.findIndex(function(item) {
                  return item.id === params.id;
                });
                if(key > -1) {
                  Object.assign(ctx.menuList[key], result.result);
                  ctx.initTree();
                }
              } else {
                ctx.menuList.push(result.result);
                ctx.initTree();
              }
            } else {
              ElementPlus.ElMessageBox.alert(result.msg, tipsError);
            }
          }).catch(function (err) {
            ElementPlus.ElMessageBox.alert(err.toString(), tipsError);
          }).finally(function () {
            loading.close();
          });
        } else {
          ElementPlus.ElMessage({message: '请完善表单信息', type: 'warning'});
        }
      },
      /// 获取菜单树
      getMenuTree: function (menus) {
        var list = JSON.parse(JSON.stringify(menus));
        function getChildren(id) {
          var result = [];
          list.forEach(function (val) {
            if (val.parent_id === id) {
              val.children = getChildren(val.id);
              result.push(val);
            }
          });
          if (result.length > 0) {
            return result;
          } else {
            return null;
          }
        }

        return getChildren(window.TempdataMenuRoot);
      },
      /// 设置当前页面
      setCurrentPage: function(menu) {
        if(menu.menu_type === this.menuType.menu) return;
        this.currentPage = Object.assign({}, menu);
      }
    }
  }).use(ElementPlus, {locale: window.ElementPlusLocaleZhCn}).mount("#page-space");
</script>
